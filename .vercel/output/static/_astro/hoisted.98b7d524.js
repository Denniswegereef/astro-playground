import"./events.5de93c63.js";import{C as M,S as _,W as v,P as x,O as G,M as d,B as m,p as C,a as P,g as S,b as y,ah as E,Q as b}from"./OrbitControls.cd156a59.js";import{G as k}from"./dat.gui.module.798d8523.js";class z{scene;camera;renderer;clock;tickHandlers;controls;container;width;height;isPlaying;constructor(){this.container=document.querySelector("[data-container-element]"),this.width=0,this.height=0,this.isPlaying=!0,this.tickHandlers=[],this.container&&(this._setSizes(),this._createTime(),this._initScene(),this._createRenderer(),this._createCamera(),this._createOrbitControls(),this._resize(),this._appendToDom(),this._addEventListeners())}_setSizes(){this.width=this.container.offsetWidth,this.height=this.container.offsetHeight}_createTime(){this.clock=new M}_initScene(){this.scene=new _}_createRenderer(){this.renderer=new v({antialias:!0}),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(1972262,1)}_createCamera(){this.camera=new x(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.z=3.5}_createOrbitControls(){!this.camera||!this.renderer||(this.controls=new G(this.camera,this.renderer.domElement),this.controls.enableDamping=!0)}_resize(){!this.renderer||!this.camera||(this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer.setSize(this.width,this.height),this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix())}_appendToDom(){this.renderer&&this.container.appendChild(this.renderer.domElement)}_addEventListeners(){window.addEventListener("resize",()=>{this._setSizes(),this._resize()})}addTickHandler(e){this.tickHandlers.push(e)}render(){if(!this.isPlaying||!this.renderer||!this.scene||!this.camera||!this.clock)return;requestAnimationFrame(()=>this.render());const e=this.clock.getElapsedTime();this.tickHandlers.forEach(t=>t(e)),this.controls&&this.controls.update(),this.renderer.render(this.scene,this.camera)}play(){this.isPlaying||(this.render(),this.isPlaying=!0)}pause(){this.isPlaying=!1}dispose(){!this.scene||!this.camera||!this.renderer||(this.scene.traverse(e=>{if(e instanceof d){e.geometry.dispose();for(const t in e.material){const i=e.material[t];i&&typeof i.dispose=="function"&&i.dispose()}}}),this.renderer.dispose())}}const h=new z;var O=`varying vec2 vUv;
uniform float uProgress;
uniform float uTime;

vec3 baseColor =  vec3(0.45098039215686275, 0.42745098039215684, 0.4745098039215686);
vec3 endColor = vec3(1.0, 0.0, 0.5);

void main()	{
	vec3 color = mix(baseColor, endColor, uProgress);
	
	gl_FragColor = vec4(color, 1.0);
}`,I=`varying vec2 vUv;
uniform float uTime;
uniform float uProgress;

void main() {
  vUv = uv;
  vec3 vPosition = position;

  gl_Position = projectionMatrix * modelViewMatrix * vec4(vPosition, 1.0);
}`;const a=[[-.5,.5,0],[.5,.5,0],[-.5,-.5,0],[.5,-.5,0]],o=.5;class D{geometry;shaderMaterial;mesh;baseCube;gui;uniforms;loader;material;cubeGroup;matcapMaterial;guiOptions;constructor(){this.gui=new k,this.geometry=new m(1,1,1),this.loader=new C,this.material=new P({color:new S("#736D79")}),this.uniforms={uTime:{value:0},uProgress:{value:0}},this.shaderMaterial=new y({vertexShader:I,fragmentShader:O,uniforms:this.uniforms,wireframe:!0}),this.matcapMaterial=new E({}),this.baseCube=new d(new m(2.1,2.1,2.1),this.matcapMaterial),this.cubeGroup=new b,this.guiOptions={expand:.08,baseExpand:.1,progress:0},this.mesh=new d(this.geometry,this.shaderMaterial),this._createCube(),h.addTickHandler(e=>this._tick(e)),this._addGui()}_tick(e){this.uniforms.uTime.value=e,this.cubeGroup.children.forEach(i=>{i.children.forEach((r,u)=>{r.position.z=this.guiOptions.baseExpand+Math.sin(e*r.userData.random)*this.guiOptions.expand*this.guiOptions.progress})});const t=.002;this.baseCube.rotation.x+=Math.sin(e)*t,this.baseCube.rotation.z+=Math.sin(e)*t,this.mesh.rotation.x+=Math.sin(e)*t,this.mesh.rotation.z+=Math.sin(e)*t,this.cubeGroup.rotation.x+=Math.sin(e)*t,this.cubeGroup.rotation.z+=Math.sin(e)*t}_createCube(){this.mesh=new d(new m(2,2,2),this.matcapMaterial);const e=(s,c)=>{const n=new d(this.geometry,this.matcapMaterial);return n.position.set(s[0],s[1],s[2]),n.userData.wall=c,n},t=(s,c)=>{const n=new b;return s.forEach(w=>n.add(e(w,c))),n},i=t(a,"top");i.rotation.x=Math.PI/2*-1,i.position.y=o,this.cubeGroup.add(i);const r=t(a,"bottom");r.rotation.x=Math.PI/2,r.position.y=-o,this.cubeGroup.add(r);const u=t(a,"left");u.rotation.y=Math.PI/2*-1,u.position.x=-o,this.cubeGroup.add(u);const l=t(a,"right");l.rotation.y=Math.PI/2,l.position.x=o,this.cubeGroup.add(l);const f=t(a,"front");f.position.z=o,this.cubeGroup.add(f);const p=t(a,"back");p.position.z=-o,p.rotation.y=Math.PI,this.cubeGroup.add(p),this.cubeGroup.children.forEach(s=>{s.children.forEach(c=>{c.userData.random=Math.random()+1})}),this.cubeGroup.scale.set(0,0,0),this.mesh.scale.set(0,0,0)}setModel(){h.scene&&(h.scene.add(this.cubeGroup),h.scene.add(this.mesh),h.scene.add(this.baseCube))}_addGui(){const e=this.gui.addFolder("Mesh");e.add(this.guiOptions,"progress",0,1).step(1e-4).name("Progress").onChange(t=>{this.baseCube.scale.set(1-.2*t,1-.2*t,1-.2*t),this.cubeGroup.scale.set(.8+.2*t,.8+.2*t,.8+.2*t)}),e.add(this.guiOptions,"expand",0).min(0).max(1).step(.001).name("Expand"),e.add(this.guiOptions,"baseExpand",0).min(0).max(1).step(.001).name("Base expand"),e.open()}}class H{constructor(){this._createWorld(),h.render()}_createWorld(){new D().setModel()}}new H;
