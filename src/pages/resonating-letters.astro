---
import Layout from "../layouts/Layout.astro";
import {
  POSSIBLE_LOWERCASE_OPTIONS,
  SETTINGS_REGULAR_RIGHT,
  SETTINGS_REGULAR_LEFT,
} from "@/components/resonating-letters";
---

<Layout title="Resonating letters">
  <main>
    <button data-download-button class="download-button">Download JSON</button>
    <h1 class="heading">Regular right</h1>
    <div class="resonating-container">
      {
        POSSIBLE_LOWERCASE_OPTIONS.map((letter) => (
          <div class="full-text-container">
            <span class="character">a</span>
            <div
              class="letter-container"    
              data-letter
              data-text-style="regular-right"
              data-letter-text={letter}
            >
              {SETTINGS_REGULAR_RIGHT.slices.map((slice, index) => (
                <span
                  data-character
                  data-percentage={slice.margin}
                  class="character"
                  style={{
                    marginLeft: `${slice.margin}%`,
                    clipPath: slice.clipPath,
                  }}
                >
                  {letter}
                </span>
              ))}
            </div>
            <span class="character">b</span>
          </div>
        ))
      }
    </div>
    <h1 class="heading">Regular left</h1>
    <div class="resonating-container">
      {
        POSSIBLE_LOWERCASE_OPTIONS.map((letter) => (
          <div class="full-text-container">
            <span class="character">a</span>
            <div
              class="letter-container"
              data-letter
              data-text-style="regular-left"
              data-letter-text={letter}
            >
              {SETTINGS_REGULAR_LEFT.slices.map((slice, index) => (
                <span
                  data-character
                  data-percentage={slice.margin}
                  class="character"
                  style={{
                    marginLeft: `${slice.margin}%`,
                    clipPath: slice.clipPath,
                  }}
                >
                  {letter}
                </span>
              ))}
            </div>
            <span class="character">b</span>
          </div>
        ))
      }
    </div>
  </main>
</Layout>

<script>
  import { downloadJSONFile } from "@/helpers/download-json-file";

  const percentageToEm = (
    percentage: number,
    containerWidth: number,
    baseFontSize: number
  ) => {
    const containerWidthInEm = containerWidth / baseFontSize;
    const emValue = (percentage / 100) * containerWidthInEm;
    return emValue;
  };

  // Find our component DOM on the page.
  const letters = [
    ...document.querySelectorAll("[data-letter]"),
  ] as HTMLElement[];

  const baseFontSize = parseFloat(window.getComputedStyle(letters[0]).fontSize);

  const calculatedSizes = letters.map((letter) => {
    const textStyle = letter.dataset.textStyle || "";

    const currentLetter = letter.dataset.letterText || "";

    const characters = [
      ...letter.querySelectorAll("[data-character]"),
    ] as HTMLElement[];

    const containerWidth = letter.getBoundingClientRect().width || 0;

    const calculatedCharacters = characters.map((character) => {
      const percentage = parseFloat(character?.dataset?.percentage || "0");

      const emValue = percentageToEm(percentage, containerWidth, baseFontSize);

      character.style.marginLeft = `${emValue}em`;

      return emValue;
    });

    return {
      letter: currentLetter,
      styles: {
        margin: calculatedCharacters,
        clipPath: characters.map((character) => character.style.clipPath),
      },
      textStyle,
    };
  });

  // Group by textStyle

  // const groupedByTextStyle = calculatedSizes.reduce((acc, letter) => {
  //   (acc[letter.textStyle] = acc[letter.textStyle] || []).push(letter);
  //   return acc;
  // }, {} as Record<string, (typeof calculatedSizes)[0][]>);

  const json = {
    data: calculatedSizes,
  };

  // Download button
  const downloadButton = document.querySelector("[data-download-button]");

  downloadButton?.addEventListener("click", () =>
    downloadJSONFile(json, "resonating-letters.json")
  );
</script>

<style lang="scss">
  /* Lowercase

Different flavours
Regular left
Regular right
Large left
Large right

Uppercase letters

Regular left */

  .download-button {
    position: fixed;
    top: 20px;
    right: 20px;
  }

  .heading {
    text-align: center;
    margin-top: 20rem;

    &:first-of-type {
      margin-top: 5rem;
    }
  }

  .resonating-container {
    display: grid;
    margin: 0 auto;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    font-size: 10vw;
    font-weight: bold;
    flex-wrap: wrap;
  }

  .full-text-container {
    cursor: pointer;
    display: flex;
    justify-content: center;

    &:hover {
      // color: red;

      span {
        color: #00a0ff;
        margin-left: 0em !important;
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
      }
    }
  }

  .letter-container {
    position: relative;
    display: inline-grid;
    grid-template-areas: "char";
    place-items: flex-start;
  }

  .character {
    grid-area: char;
    position: relative;
    display: inline-block;
    transition: margin-left 0.5s cubic-bezier(0.83, 0, 0.17, 1),
      clip-path 0.6s cubic-bezier(0.83, 0, 0.17, 1), color 0.3s ease-in-out;
  }
</style>
